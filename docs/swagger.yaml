definitions:
  dto.UserCreateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  utils.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      meta: {}
      status:
        type: boolean
    type: object
info:
  contact:
    email: c010d4ky0983@bangkit.academy
    name: Muhammad Hilman Al Ayubi
  description: All provided API for Ulascan APP.
  termsOfService: http://swagger.io/terms/
  title: UlaScan BE API
  version: "1.2"
paths:
  /api/history:
    get:
      consumes:
      - application/json
      description: Retrieve the user's analysis histories.
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Maximum number of results per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Retrieve the user's analysis histories.
      tags:
      - History
  /api/history/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve the user's analysis history by id.
      parameters:
      - description: History ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Retrieve the user's analysis history by id.
      tags:
      - History
  /api/ml/analysis:
    get:
      consumes:
      - application/json
      description: Get product analysis form url link.
      parameters:
      - description: Tokopedia Product Link
        in: query
        name: product_url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: Get product analysis
      tags:
      - Analysis
  /api/ml/guest/analysis:
    get:
      consumes:
      - application/json
      description: Get product analysis form url link as guest.
      parameters:
      - description: Tokopedia Product Link
        in: query
        name: product_url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Get product analysis as guest
      tags:
      - Analysis
  /api/user:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Register a new user
      tags:
      - Auth
  /api/user/login:
    post:
      consumes:
      - application/json
      description: Login user with the provided creds
      parameters:
      - description: User creds
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Login user
      tags:
      - Auth
  /api/user/me:
    get:
      consumes:
      - application/json
      description: Get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: User info
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Enter the token with the `Bearer ` prefix, e.g. "Bearer abcde12345"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
